<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.senko.system.mapper.PhotoAlbumMapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.senko.common.common.entity.PhotoAlbumEntity" id="photoAlbumMap">
        <result property="id" column="id"/>
        <result property="albumName" column="album_name"/>
        <result property="albumDesc" column="album_desc"/>
        <result property="albumCover" column="album_cover"/>
        <result property="isDelete" column="is_delete"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <select id="listPhotoAlbumDTO" resultType="com.senko.common.common.dto.AlbumBackDTO">
        SELECT pa.id, pa.album_name, pa.album_desc, pa.album_cover, pa.status, COUNT(p.id) AS photo_count
        FROM (
            SELECT id, album_name, album_desc, album_cover, status
            FROM tb_photo_album
            WHERE is_delete = 0
            <if test="condition.keywords != null">
                AND album_name LIKE CONCAT('%', #{condition.keywords}, '%')
            </if>
            ORDER BY id DESC
            LIMIT #{current}, #{size}
             ) pa
        LEFT JOIN (
            SELECT id, album_id
            FROM tb_photo
            WHERE is_delete = 0
        ) p ON p.album_id = pa.id
        GROUP BY pa.id
    </select>


</mapper>
