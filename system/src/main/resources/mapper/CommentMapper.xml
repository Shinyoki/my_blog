<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.senko.system.mapper.CommentMapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.senko.common.common.entity.CommentEntity" id="commentMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="topicId" column="topic_id"/>
        <result property="commentContent" column="comment_content"/>
        <result property="replyUserId" column="reply_user_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="type" column="type"/>
        <result property="isDelete" column="is_delete"/>
        <result property="isReview" column="is_review"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <select id="selectCountByConditionVO" resultType="java.lang.Long"
            parameterType="com.senko.common.core.vo.ConditionVO">
        SELECT COUNT(1)
        FROM tb_comment c
            LEFT JOIN tb_user_info u ON c.user_id = u.id
        <where>
            <if test="condition.type != null">
                c.type = #{condition.type}
            </if>
            <if test="condition.isReview != null">
                AND c.is_review = #{condition.isReview}
            </if>
            <if test="condition.keywords != null">
                AND u.nickname LIKE CONCAT('%', #{condition.keywords}, '%')
            </if>
        </where>
    </select>
    <select id="listCommentBack" resultType="com.senko.common.common.dto.CommentBackDTO">
        SELECT
            c.id,
            c.type,
            c.comment_content,
            c.is_review,
            c.create_time,
            u.avatar,
            u.nickname,
            r.nickname reply_nickname,
            a.article_title
        FROM tb_comment c
            LEFT JOIN tb_article a ON a.id = c.topic_id
            LEFT JOIN tb_user_info u ON u.id = c.user_id
            LEFT JOIN tb_user_info r ON c.reply_user_id = r.id
        <where>
            <if test="condition.type != null">
                c.type = #{condition.type}
            </if>
            <if test="condition.isReview != null">
                AND c.is_review = #{condition.isReview}
            </if>
            <if test="condition.keywords != null">
                AND u.nickname LIKE CONCAT('%', #{condition.keywords}, '%')
            </if>
        </where>
        ORDER BY id DESC
        LIMIT #{current}, #{size}
    </select>

    <select id="listComments" resultType="com.senko.common.common.dto.CommentDTO">
        SELECT
        u.nickname,
        u.avatar,
        u.web_site,
        c.user_id,
        c.id,
        c.comment_content,
        c.create_time
        FROM
        tb_comment c
        JOIN tb_user_info u ON c.user_id = u.id
        <where>
            <if test="commentVO.topicId != null">
                topic_id = #{commentVO.topicId}
            </if>
            AND type = #{commentVO.type}
            AND c.is_review = 1
            AND parent_id IS NULL
        </where>
        ORDER BY
        c.id DESC
        LIMIT #{current},#{size}
    </select>

    <select id="listReplies" resultType="com.senko.common.common.dto.ReplyDTO">
        SELECT
        *
        FROM
        (
        SELECT
        c.user_id,
        u.nickname,
        u.avatar,
        u.web_site,
        c.reply_user_id,
        r.nickname AS reply_nickname,
        r.web_site AS reply_web_site,
        c.id,
        c.parent_id,
        c.comment_content,
        c.create_time,
        row_number () over ( PARTITION BY parent_id ORDER BY create_time ASC ) row_num
        FROM
        tb_comment c
        JOIN tb_user_info u ON c.user_id = u.id
        JOIN tb_user_info r ON c.reply_user_id = r.id
        WHERE
        c.is_review = 1
        AND
        parent_id IN
        (
        <foreach collection="commentIdList" item="commentId" separator=",">
            #{commentId}
        </foreach>
        )
        ) t
        WHERE
        4 > row_num
    </select>

    <select id="listReplyCountByCommentId" resultType="com.senko.common.common.dto.ReplyCountDTO">
        SELECT parent_id AS comment_id,
            count(1) AS reply_count
        FROM tb_comment
        WHERE
            is_review = 1
            AND
            parent_id IN (
                <foreach collection="commentIdList" item="commentId" separator=",">
                    #{commentId}
                </foreach>
             )
        GROUP BY parent_id
    </select>


</mapper>
